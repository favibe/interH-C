.intro  {
    font-size: 2em;
    letter-spacing: 1px;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}
.truncate {
    width: 200px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
/* Advance selector
- child Siblig selector(>, +, ~)
*/
/* The divs with the class "child" will get selected by this */
main > div {
border: 2px solid rgb(207, 48, 207);
}

/* The grand-child elements */
main > div > div {
border: 2px solid orange;
}
/* using the + combinator */
.group1 + div {
    border: 2px solid green;
}

/* using the ~ combinator */
.group1 ~ div {
    border: 2px solid blue;
}

/*  Pseudo-selectors  */


/*Marker pseudo-element */
ol li::marker {
    color: red;
    font-size: 1.5em;
    font-weight: bold;
}
ul li::marker{
    content: "ðŸ‘‰ ";
}
h3 {
    counter-increment: h3;
    display: list-item;
}

h3::marker {
  display: list-item;
  content: "#" counter(h3) " ";
  color: lightsalmon;
}

/* First-letter pseudo-element */
h3::first-letter {
  font-weight: bold;
  color: red;
}
/* First-line pseudo-element */
p::first-line {
  letter-spacing: 2px;
}
/* Selection pseudo-element */
p::selection {
  background-color: yellow;
  color: black;
}
/* Link pseudo-classes */
a:link {
  color: blue;
  text-decoration: none;
}
/* before and after pseudo-elements */
.greet::before {
  content: "ðŸ‘‹ ";
}
.greet::after {
  content: " ðŸ˜Š";
}
/* Nth-child pseudo-class */
li:nth-child(odd) {
  background-color: lightgray;
}
li:nth-child(even) {
  background-color: lightblue;
}
li:nth-child(3) {
  font-weight: bold;
  color: rgb(255, 0, 212);
}
li:nth-child(-n+2) {
  font-style: italic;
  color: green;
}
/* Attribute selectors */
input[type="text"] {
  border: 2px solid blue;
  border-radius: 2px;
  padding: 4px;
}
.container p:first-child::first-line {
  color: red;
}
/* custom Css variables/propeeties */
:root{
  --main-bg-color: #f0f0f0;
  --main-text-color: #333333;
  --main-border-color: #cccccc;

  --logo-border-radius: 8px var(--main-border-radius);
}
/* Using the custom properties */
body {
  background-color: var(--main-bg-color);
  color:var(--main-text-color);
  bottom: 2px solid var(--main-border-color);
}
/* The custom variables cascade. So you can override them
it is best to write them in the root, first define them so they act
like Global variables, and you can use them all over your css.
but if you declare it on a specific html element styling(selelctor);
 you can only use it to that specific css */


/* Css Nesting */
.card {
  background: pink;
  padding: 20px;


  h2 {
    color: purple;
    margin-bottom: 10px;

  }

    button{
      background: purple;
      color: white;
      border: none;
      padding: 10px 15px;
      cursor: pointer;

      &:hover{
        background: darkmagenta;
    }
  }
}